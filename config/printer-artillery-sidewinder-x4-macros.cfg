[force_move]
enable_force_move: true
[pause_resume]

[gcode_macro START_PRINT]
gcode:
  #Get Bed and Extruder temperature from Slicer GCode
  {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
  {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(200)|float %}

  CLEAR_PAUSE
  BED_MESH_PROFILE LOAD=default  
  SET_LED LED=extruder RED=0.0 GREEN=0.0 BLUE=0.0 WHITE=1.0

  G28 ; Home all Axes
  G12 ; Clear the nozzle 
  G92 E0 ; reset extruder
  G90 ; set absolute positioning

  M117 Heatup Bed {BED_TEMP}°C Nozzle {EXTRUDER_TEMP}°C
  # Change for unheated build plate
  {% if params.BED_TEMP != "0" %} 
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}  
    SET_LED LED=extruder RED=1.0 GREEN=0.0 BLUE=0.0 WHITE=0.0
    TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={BED_TEMP*0.96} MAXIMUM={BED_TEMP*1.04}
    SET_LED LED=extruder RED=0.0 GREEN=0.0 BLUE=0.0 WHITE=1.0
  {% endif %}

  # Home again after heating bed up. 
  G28 Z
  
  # BED_MESH_PROFILE SAVE=automesh_default_backup
  # M117 Vor Calibrate
  # KAMP_BED_MESH_CALIBRATE
  # M117 Nach Calibrate
  
  G1 Z10 F3000 ; move z up little to prevent scratching of surface

  G28 X Y
  
  SET_LED LED=extruder RED=1.0 GREEN=0.0 BLUE=0.0 WHITE=0.0
  SET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}    
  TEMPERATURE_WAIT SENSOR=extruder MINIMUM={EXTRUDER_TEMP*0.98} MAXIMUM={EXTRUDER_TEMP*1.02}
  SET_LED LED=extruder RED=0.0 GREEN=0.0 BLUE=0.0 WHITE=1.0

  PRIME_LINE

[gcode_macro END_PRINT]
gcode:
  SET_LED LED=extruder RED=1.0 GREEN=0.0 BLUE=0.0 WHITE=0.0
  # M83 ; Extruder relative positin

  M117 End print
  
  # BED_MESH_PROFILE LOAD=automesh_default_backup
  # BED_MESH_PROFILE SAVE=default
  # BED_MESH_PROFILE REMOVE=automesh_default_backup
  
  PRESENT_PRINT
  TURN_OFF_HEATERS

  G90 ;Absolute positionning
  M106 S0 ;Turn-off fan
  M84 ;Disable all steppers but Z
  TURN_OFF_HEATERS
  
  M117 Print Complete

[gcode_macro PRIME_LINE]
gcode: 
  SAVE_GCODE_STATE NAME=prime_line_state

  G90
  G92 E0 ; reset extruder
  G1 X2 Y20 Z0.3 F5000.0 ; move to start-line position 
  
  G1 Z1.0 F3000 ; move z up little to prevent scratching of surface
  G1 X2 Y20 Z0.3 F5000.0 ; move to start-line position
  G1 X2 Y200.0 Z0.3 F1500.0 E15 ; draw 1st line
  G1 X2 Y200.0 Z0.4 F5000.0 ; move to side a little
  G1 X2 Y20 Z0.4 F1500.0 E30 ; draw 2nd line
  G92 E0 ; reset extruder
  G1 Z1.0 F3000 ; move z up little to prevent scratching of surface 

  RESTORE_GCODE_STATE NAME=prime_line_state

[gcode_macro PRESENT_PRINT]
gcode:
  SAVE_GCODE_STATE NAME=present_print_state

  # Move nozzle away from print while retracting
  G91 ;Relative positioning
  G1 E-2 F2700 ;Retract a bit
  G1 E-2 Z0.2 F2400 ;Retract and raise Z
  G1 X5 Y5 F3000 ;Wipe out
  G1 Z10 ;Raise Z more
  G90 ;Absolute positionning
  G0 X300 Y300 ; move to back right corner
  M106 S0 ;Turn-off fan
  M84 X Y E ;Disable all steppers but Z

  ; {% set X_MAX = printer.toolhead.axis_maximum.x|float %}
  ; {% set Y_MAX = printer.toolhead.axis_maximum.y|float %}
  ; {% set Z_MAX = printer.toolhead.axis_maximum.z|float %}
  ; {% set Z_PARK_MIN = 100 | float %}
  ; {% set Z_PARK_LIFT = 10 | float %}
  ; G90
  ; {% if printer.toolhead.position.z + Z_PARK_LIFT > Z_PARK_MIN %}
  ;   G1 X{X_MAX / 2} Y{Y_MAX * 0.8} Z{printer.toolhead.position.z + Z_PARK_LIFT} F4000
  ; {% else %}
  ;   G1 X{X_MAX / 2} Y{Y_MAX * 0.8} Z{Z_PARK_MIN} F4000
  ; {% endif %}

  RESTORE_GCODE_STATE NAME=present_print_state

# [gcode_macro PAUSE]
# rename_existing: BASE_PAUSE
# gcode: 
#     {% set z = params.Z|default(20)|int %}                                                   
#     {% set e = params.E|default(2.5) %} 
#     SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}                             
#     SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}                                              
#     SAVE_GCODE_STATE NAME=PAUSE                                                                  
#     M25                                                                              
#     {% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}       
#       G91
# 	    M83
# 	    G1 E-{e} F2100
#       G1 Z{z} F900                                                                     
#     {% else %}
#       SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
#     {% endif %}
#     SAVE_GCODE_STATE NAME=PAUSEPARK
#     G90                                                                                  
#     #G1 X0 Y0 F6000
# 	  G1 E{e} F2100	
#     SET_IDLE_TIMEOUT TIMEOUT=43200                                                       

# [gcode_macro RESUME]
# rename_existing: BASE_RESUME
# variable_zhop: 0
# variable_etemp: 0
# gcode:
#     #G28 X Y
#     {% set e = params.E|default(2.5)|int %}                                          
#     SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}
#     G91                                                                               
#     M83
# 	  G1 E-{e} F900		
#     RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=100                     
#     {% if printer[printer.toolhead.extruder].temperature >= printer.configfile.settings.extruder.min_extrude_temp %}                                                
#       G1 Z{zhop * -1} F900
# 	    G1 E{e+0.5} F900	  
#     {% else %}                      
#       G1 Z{zhop * -1} F900                                                     
#     {% endif %}
#     RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=60 
#     M24

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
variable_park: True
gcode:
  ## Move head and retract only if not already in the pause state and park set to true
  {% if printer.pause_resume.is_paused|lower == 'false' and park|lower == 'true'%}
    _TOOLHEAD_PARK_PAUSE_CANCEL
  {% endif %}
  TURN_OFF_HEATERS

#   BED_MESH_PROFILE LOAD=automesh_default_backup
#   BED_MESH_PROFILE SAVE=default
#   BED_MESH_PROFILE REMOVE=automesh_default_backup

  SET_LED LED=extruder RED=1.0 GREEN=1.0 BLUE=0.0 WHITE=0.0

  CANCEL_PRINT_BASE

[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
description: Helper: park toolhead used in PAUSE and CANCEL_PRINT
variable_extrude: 1.0
gcode:
#   ##### set park positon for x and y #####
#   # default is your max posion from your printer.cfg
#   {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
#   {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
#   {% set z_park_delta = 2.0 %}
#   ##### calculate save lift position #####
#   {% set max_z = printer.toolhead.axis_maximum.z|float %}
#   {% set act_z = printer.toolhead.position.z|float %}
#   {% if act_z < (max_z - z_park_delta) %}
#     {% set z_safe = z_park_delta %}
#   {% else %}
#     {% set z_safe = max_z - act_z %}
#   {% endif %}
#   ##### end of definitions #####
#   {% if printer.extruder.can_extrude|lower == 'true' %}
#     M83
#     G1 E-{extrude} F2100
#     {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
#   {% else %}
#     {action_respond_info("Resume1 Extruder not hot enough")}
#   {% endif %}
#   {% if "xyz" in printer.toolhead.homed_axes %}
#     G91
#     G1 Z{z_safe} F900
#     G90
#     G1 X{x_park} Y{y_park} F6000
#     {% if printer.gcode_move.absolute_coordinates|lower == 'false' %} G91 {% endif %}
#   {% else %}
#     {action_respond_info("Printer not homed")}
#   {% endif %}

# [gcode_macro SET_ACTIVE_SPOOL]
# gcode:
#   {% if params.ID %}
#     {% set id = params.ID|int %}
#     {action_call_remote_method(
#        "spoolman_set_active_spool",
#        spool_id=id
#     )}
#   {% else %}
#     {action_respond_info("Parameter 'ID' is required")}
#   {% endif %}

# [gcode_macro CLEAR_ACTIVE_SPOOL]
# gcode:
#   {action_call_remote_method(
#     "spoolman_set_active_spool",
#     spool_id=None
#   )}

# TODO: move back to original position
[gcode_macro WIPE_NOZZLE]
gcode: 
  {% set wipe_count = params.COUNT|default(6)|int %}
  {% set exit_x = printer.toolhead.axis_maximum.x - 40 %}
  SAVE_GCODE_STATE NAME=wipe_nozzle_state
  G90
  
  G0 Z10 F1000
  ; move to the perimeter of the print bed
  G0 X{exit_x} Y{printer.toolhead.axis_maximum.y} F5000

  M400 
  G0 Z0.3 F600
  ; F=5000mm/min -> 83mm/s
  FORCE_MOVE STEPPER=stepper_y DISTANCE=31 VELOCITY=85
  FORCE_MOVE STEPPER=stepper_x DISTANCE=-30 VELOCITY=85

  {% for i in range(wipe_count) %}
    FORCE_MOVE STEPPER=stepper_x DISTANCE=40 VELOCITY=85
    FORCE_MOVE STEPPER=stepper_x DISTANCE=-40 VELOCITY=85
  {% endfor %}
  FORCE_MOVE STEPPER=stepper_x DISTANCE=30 VELOCITY=85

  ; move back into the print bed
  G0 Z10 F1200
  FORCE_MOVE STEPPER=stepper_y DISTANCE=-31 VELOCITY=85
  G92 E0 
  G1 E-1 F3000
  RESTORE_GCODE_STATE NAME=wipe_nozzle_state

# [gcode_macro NEOPIXEL_DISPLAY]
# gcode:
#     {% set led = params.LED %}
#     {% set type = params.TYPE %}
#     {% set mode = params.MODE %}
#     {% set my_neopixel = printer.configfile.config['neopixel ' ~ led] %}

#     {% if mode == 'progress' %}
#         {% for i in range(my_neopixel.chain_count|int) %}
#             SET_LED_TEMPLATE LED={led} INDEX={i+1} TEMPLATE={'led_' ~ type ~ '_' ~ mode} param_led_num={i+1} param_led_total={my_neopixel.chain_count|int}
#         {% endfor %}
#     {% endif %}
#     {% if mode == 'glow' %}
#         SET_LED_TEMPLATE LED={led} TEMPLATE={'led_' ~ type ~ '_' ~ mode}
#     {% endif %}

# [gcode_macro M109]
# rename_existing: M99109
# gcode:
#      SAVE_VARIABLE VARIABLE=htemp VALUE='{printer.extruder.temperature}'
#      NEOPIXEL_DISPLAY LED="extruder" TYPE=extruder_temp MODE=glow
#     {% set s = params.S|float %}
#     M104 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}  ; Set hotend temp
#     {% if s != 0 %}
#         TEMPERATURE_WAIT SENSOR=extruder MINIMUM={s-2} MAXIMUM={s+2}   ; Wait for hotend temp (within 1 degree)
#          #NEOPIXEL_DISPLAY LED="extruder" TYPE=extruder_temp MODE=glow
#     {% endif %}
#     NEOPIXEL_DISPLAY LED="extruder" TYPE=print_percent MODE=progress 
    
    
# [gcode_macro M190]
# rename_existing: M99190
# gcode:
#      NEOPIXEL_DISPLAY LED="extruder" TYPE=bed_temp MODE=glow
#     {% set s = params.S|float %}
#     M140 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}   ; Set bed temp
#     {% if s != 0 %}
#         TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={s-2} MAXIMUM={s+2}  ; Wait for bed temp (within 1 degree)
#     {% endif %}


#
# The following code is probably for the display
#

# [gcode_macro move_to_point_0]
# gcode:
#    G1 Z10 F600
#    M400
#    G1 X24 Y35  F12000
#    M400
#    G1 Z0 F600
#    M400

# [gcode_macro move_to_point_1]
# gcode:
#    G1 Z10 F600
#    M400
#    G1 X274 Y35  F12000
#    M400
#    G1 Z0 F600
#    M400

# [gcode_macro move_to_point_2]
# gcode:
#    G1 Z10 F600
#    M400
#    G1 X24 Y165  F12000
#    M400
#    G1 Z0 F600
#    M400

# [gcode_macro move_to_point_3]
# gcode:
#    G1 Z10 F600
#    M400
#    G1 X274 Y165  F12000
#    M400
#    G1 Z0 F600
#    M400

# [gcode_macro move_to_point_4]
# gcode:
#    G1 Z10 F600
#    M400
#    G1 X24 Y295  F12000
#    M400
#    G1 Z0 F600
#    M400

# [gcode_macro move_to_point_5]
# gcode:
#    G1 Z10 F600
#    M400
#    G1 X274 Y295  F12000
#    M400
#    G1 Z0 F600
#    M400

# [gcode_macro move_to_point_6]
# gcode:
#    G1 Z10 F600
#    M400
#    G1 X152 Y165  F12000
#    M400
#    G1 Z0 F600
#    M400

# [gcode_macro FLASHLIGHT_ON]
# description: Turn on Hotend LEDs
# gcode:
#   SET_PIN PIN=caselight VALUE=1


# [gcode_macro FLASHLIGHT_OFF]
# description: Turn off Hotend LEDs
# gcode:
#   SET_PIN PIN=caselight VALUE=0


# [gcode_macro MODLELIGHT_ON]
# description: Turn on Logo LEDs
# gcode:
#   SET_PIN PIN=caselight1 VALUE=1


# [gcode_macro MODLELIGHT_OFF]
# description: Turn off Logo LEDs
# gcode:
#   SET_PIN PIN=caselight1 VALUE=0

# [gcode_macro G29]
# gcode:
#       BED_MESH_CLEAR
#       G28
#       BED_MESH_CALIBRATE
#       G0 Z50 F1800
#       G0 X170 Y175 F12000

# [delayed_gcode KINEMATIC_POSITION]
# initial_duration:0.2
# gcode:
#       SET_KINEMATIC_POSITION X=0
#       SET_KINEMATIC_POSITION Y=0
#       SET_KINEMATIC_POSITION Z=0

# [gcode_macro G31]
# gcode:
#       RUN_SHELL_COMMAND CMD=clear_plr

# [gcode_shell_command clear_plr]
# command: sh /home/mks/clear_plr.sh
# timeout: 5.

# [gcode_macro save_last_file]
# gcode:
#   {% set svv = printer.save_variables.variables %}
#   {% set filepath=printer.virtual_sdcard.file_path %}
#   {% set filename=filepath.split('/')%}

#   SAVE_VARIABLE VARIABLE=last_file VALUE='"{ filename[-1] }"'
#   SAVE_VARIABLE VARIABLE=filepath VALUE='"{ printer.virtual_sdcard.file_path }"'

#   M118 Last File: { filename[-1] }

# [gcode_macro clear_last_file]
# gcode:
#   {% set filename='' %}
#   {% set filepath='' %}
#   SAVE_VARIABLE VARIABLE=last_file VALUE='"{ filename }"'
#   SAVE_VARIABLE VARIABLE=filepath VALUE='"{ filepath }"'
  
# [gcode_shell_command POWER_LOSS_RESUME]
# command: /home/mks/plr.sh
# timeout: 420.

# [gcode_macro RESUME_INTERRUPTED]
# gcode =
#     SET_GCODE_OFFSET Z=0 MOVE=0
#     {% set z_height = params.Z_HEIGHT|default(printer.save_variables.variables.power_resume_z)|float %}
#     {% set last_file = params.GCODE_FILE|default(printer.save_variables.variables.last_file)|string %}
#     m118 {last_file}

#     RUN_SHELL_COMMAND CMD=POWER_LOSS_RESUME PARAMS="{z_height} \"{last_file}\""
#     SDCARD_PRINT_FILE FILENAME=plr/"{last_file}"

# [gcode_macro LOG_Z]
# gcode:
#     {% set z_pos = printer.gcode_move.gcode_position.z %}
#     RESPOND MSG="Current Z is {z_pos}"
#     SAVE_VARIABLE VARIABLE=power_resume_z VALUE={z_pos}

# [save_variables]
# filename =/home/mks/klipper_config/saved_variables.cfg

# [gcode_macro NEOPIXEL_DISPLAY]
# gcode:
#     {% set led = params.LED %}
#     {% set type = params.TYPE %}
#     {% set mode = params.MODE %}
#     {% set my_neopixel = printer.configfile.config['neopixel ' ~ led] %}

#     {% if mode == 'progress' %}
#         {% for i in range(my_neopixel.chain_count|int) %}
#             SET_LED_TEMPLATE LED={led} INDEX={i+1} TEMPLATE={'led_' ~ type ~ '_' ~ mode} param_led_num={i+1} param_led_total={my_neopixel.chain_count|int}
#         {% endfor %}
#     {% endif %}
#     {% if mode == 'glow' %}
#         SET_LED_TEMPLATE LED={led} TEMPLATE={'led_' ~ type ~ '_' ~ mode}
#     {% endif %}


# [display_template led_extruder_temp_glow]
# text:
#     {% if printer.extruder.target > 0.0 %}
#         {%  set temp = printer.extruder.target %}
#     {% else %}
#         {% set temp = printer.configfile.config.extruder.max_temp %}
#     {% endif %}
#     {% set ratio = printer.extruder.temperature / temp|float %}
#     {0.5}, 0.0, {1-ratio}, 0.0

# [display_template led_bed_temp_glow]
# text:
#     {% if printer.heater_bed.target > 0.0 %}
#         {%  set temp = printer.heater_bed.target %}
#     {% else %}
#         {% set temp = printer.configfile.config.heater_bed.max_temp %}
#     {% endif %}
#     {% set ratio = printer.heater_bed.temperature / temp|float %}
#     {0.1}, 0.0, {0.5-ratio}, 0.0


# [display_template led_print_percent_progress]
# param_led_num:  0
# param_led_total: 1
# text:
    
#         1, 1, 1, 0.0

[gcode_macro G12]
description: Clean nozzle on the rubber
gcode: 
  {% set wipe_count = params.C|default(6)|int %}
  WIPE_NOZZLE COUNT={wipe_count}



